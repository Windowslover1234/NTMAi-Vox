class NTM_Chainsaw : Chainsaw replaces Chainsaw {
	Default {
		Scale 0.8;
		Weapon.SlotNumber 1;
	}
	
	States {
		Select:
			NCSA A 0 A_JumpIfInventory("NTM_Bloody", 1, 2);
			NCSA A 1 A_Raise;
			Loop;
			NCSA E 1 A_Raise;
			Goto Select + 2;
			
		Deselect:
			NCSA A 0 A_NTM_SawIdle2;
			NCSA A 0 A_JumpIfInventory("NTM_Bloody", 1, "DeselectBloody");
			NCSA A 1 A_Lower(12);
			Goto Deselect + 2;
		
		DeselectBloody:
			NCSA E 1 A_Lower(12);
			Loop;
			
		Ready:
			NCSA A 0 A_NTM_SawIdle2;
			NCSA A 0 A_JumpIfInventory("NTM_Bloody", 1, 3);
			NCSA AB 4 A_NTM_SawIdle;
			Loop;
			NCSA EF 4 A_NTM_SawIdle;
			Loop;
			
		Fire:
			NCSA C 0 A_JumpIfInventory("NTM_Bloody", 1, "Fire2");
			NCSA C 1 A_NTM_Saw;
			NCSA DC 1;
			NCSA D 1 A_NTM_Saw;
			NCSA CD 1;
			NCSA D 0 A_Refire;
			Goto Ready;
		
		Fire2:
			NCSA G 1 A_NTM_Saw;
			NCSA HG 1;
			NCSA H 1 A_NTM_Saw;
			NCSA GH 1;
			NCSA H 0 A_Refire("Fire2");
			Goto Ready;
	}
	
	action void A_NTM_SawIdle() {
		A_WeaponReady();
		A_WeaponOffset(Random(0, 2), Random(32, 34), WOF_Interpolate);
	}
	
	action void A_NTM_SawIdle2() {
		A_StartSound("weapons/sawidle", Chan_Weapon);
	}
	
	action void A_NTM_Saw() {
		A_StartSound("weapons/sawfull", Chan_Weapon, ChanF_Looping);
		A_Saw("", "weapons/sawhit", 3, "NTM_ChainsawPuff", SF_NoTurn);
		A_WeaponOffset(Random(-2, 2), Random(32, 38), WOF_Interpolate);
	}
		override void Tick() //Anyone know how to do this better than copy-pasting this in every sprite you want to spin?
	{
		if (sv_ntm_voxelSpin > 0) {
			A_SetAngle(angle + 3.33, SPF_Interpolate);
		}
		Super.Tick();
	}
}

class NTM_ChainsawPuff : NTM_BulletPuff {
	Default {
		DamageType "Chainsaw";
	}
	
	States {
		Spawn:
			PUFF A 4 Bright NoDelay A_StartSound("NTM_ChainsawPuff/miss");
			Goto Super::Spawn + 1;
	}
}

class NTM_Bloody : NTM_PistolShots {}